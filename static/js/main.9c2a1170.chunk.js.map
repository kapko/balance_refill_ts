{"version":3,"sources":["styles/list.styles.js","data.ts","components/loader.tsx","components/image.tsx","components/text.tsx","components/item.tsx","components/list.tsx","actions/provider.action.ts","actions/providers.action.ts","components/phone.number.tsx","components/balance.tsx","components/button.component.tsx","common/types/refill.types.ts","components/snack.tsx","components/refill.tsx","reducers/provider.ts","reducers/providers.ts","reducers/index.ts","store/index.ts","index.js"],"names":["listStyles","makeStyles","root","flexGrow","maxWidth","title","textAlign","fontSize","demo","data","image","description","LoaderComponent","props","showLoader","CircularProgress","color","size","ImageComponent","React","useState","loader","setLoader","Fragment","width","height","src","hidden","onLoad","alt","TextComponent","Typography","align","variant","tag","gutterBottom","text","ItemComponent","item","className","onClick","getProvider","key","connect","state","providers","dispatch","list","payload","type","initProviders","lists","initialData","classes","fetchData","showListEvent","useEffect","timer","setTimeout","clearTimeout","Grid","lg","fetched","List","items","map","PhoneNumberComponent","inputRef","other","ref","inputElement","mask","guide","placeholder","BalanceComponent","onChange","getInputRef","format","onValueChange","values","target","value","ButtonComponent","Button","ERefillHandle","SnackComponent","show","open","setOpen","Snackbar","anchorOrigin","vertical","horizontal","onClose","hideSnack","severity","elevation","message","initialSnackState","isError","initialValueState","phone","amount","provider","snack","setSnackValues","setValues","handleChange","name","event","onSubmit","preventDefault","Math","round","random","FormControl","InputLabel","htmlFor","Input","required","inputComponent","TextField","label","InputProps","initialState","rootReducer","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","applyMiddleware","thunk","store","createStore","render","showList","setShowList","val","Container","document","getElementById"],"mappings":"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","file":"static/js/main.9c2a1170.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nexport const listStyles = makeStyles(() => ({\n  root: {\n    flexGrow: 1,\n    maxWidth: 752,\n  },\n  title: {\n    textAlign: 'center',\n    fontSize: 32\n  },\n  demo: {\n    fontSize: 32\n  }\n}));\n\n","import {IList} from \"./common/types\";\n\nexport const data: IList[] = [\n  {\n    image: 'https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRZwt-Y2VNeEqz6YpY9cKQBmeMYWNW7Rx0SRKlPrN2rq4WsbeT8',\n    title: 'Megafon',\n    description: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit. Aspernatur quas deleniti tempore saepe voluptates reprehenderit accusamus ipsum nam magni! Repellendus ad ipsam iste magni inventore ut atque nesciunt maxime culpa!'\n  },\n  {\n    image: 'https://pbs.twimg.com/profile_images/1083672144515616768/ocUrD2fk.jpg',\n    title: 'MTC',\n    description: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit. Aspernatur quas deleniti tempore saepe voluptates reprehenderit accusamus ipsum nam magni! Repellendus ad ipsam iste magni inventore ut atque nesciunt maxime culpa!'\n  },\n  {\n    image: 'https://img1.freepng.ru/20180708/x/kisspng-mobile-service-provider-company-sms-blog-beeline-5b418e789bfa98.2063547815310229686389.jpg',\n    title: 'Beeline',\n    description: 'Lorem, ipsum dolor sit amet consectetur adipisicing elit. Aspernatur quas deleniti tempore saepe voluptates reprehenderit accusamus ipsum nam magni! Repellendus ad ipsam iste magni inventore ut atque nesciunt maxime culpa!'\n  }\n];\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport {ILoader} from \"../common/types\";\n\nexport default function LoaderComponent(props: ILoader): JSX.Element | null {\n  if (props.showLoader) {\n    return <CircularProgress color={props.color || 'primary'} size={props.size || 40} />\n  } else {\n    return null\n  }\n}\n","import React from 'react';\nimport LoaderComponent from './loader';\nimport {IImageComponent} from \"../common/types\";\n\nexport default function ImageComponent(props: IImageComponent): JSX.Element {\n  const [loader, setLoader] = React.useState<boolean>(true);\n\n  return <React.Fragment>\n    <LoaderComponent size={60} showLoader={loader}/>\n\n    <img\n      width={props.width ? `${props.width}px` : '80px'}\n      height={props.height ? `${props.height}px` : '80px'}\n      src={props.src}\n      hidden={loader}\n      onLoad={() => setLoader(false)}\n      alt={props.alt || 'image'}/>\n\n  </React.Fragment>\n}\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport {ITextComponent} from \"../common/types\";\n\nexport default function TextComponent(props: ITextComponent): JSX.Element {\n  return <Typography align={props.align || 'left'} variant={props.tag || 'h4'} gutterBottom>{props.text}</Typography>\n}","import React from 'react';\nimport ImageComponent from './image';\nimport TextComponent from './text';\nimport {IList} from \"../common/types\";\n\ninterface IItemComponent {\n  getProvider: (item: IList) => void,\n  item: IList\n}\n\nexport default function ItemComponent(props: IItemComponent): JSX.Element {\n  const { item } = props;\n\n  return <div\n    className=\"item\"\n    onClick={() => props.getProvider(item)}\n    key={item.title}>\n    <ImageComponent src={item.image} />\n    <TextComponent align=\"center\" tag=\"h4\" text={item.title} />\n    <TextComponent tag=\"body1\" text={item.description} />\n  </div>\n}\n","import React, {useEffect} from 'react';\nimport {ThunkDispatch} from \"redux-thunk\";\nimport {connect} from 'react-redux';\nimport List from '@material-ui/core/List';\nimport Grid from '@material-ui/core/Grid';\n// local files\nimport {initProviders} from \"../actions/providers.action\";\nimport {listStyles} from '../styles/list.styles';\nimport {IList} from \"../common/types\";\nimport {data} from \"../data\";\nimport {AppState} from \"../store\";\nimport {getProvider} from \"../actions/provider.action\";\nimport LoaderComponent from './loader';\nimport ItemComponent from \"./item\";\nimport {\n  IListMapDispatchToProps,\n  IListMapStateToProps,\n  TListProps,\n} from \"../common/types/list.types\";\nimport TextComponent from \"./text\";\n\nfunction ListComponent(props: TListProps): JSX.Element {\n  const initialData: IList[] = data;\n  const {providers} = props;\n  const classes = listStyles();\n\n  function fetchData(): void {\n    props.initProviders(initialData);\n  }\n\n  function getProvider(list: IList): void {\n    props.getProvider(list);\n    props.showListEvent(false);\n  }\n\n  useEffect(() => {\n    const timer = setTimeout(fetchData, 1500);\n    return () => clearTimeout(timer);\n  }, []);\n\n  return <Grid item lg={12}>\n    <TextComponent tag=\"h3\" align=\"center\" text=\"Refill balance\"  />\n    <div className={classes.demo}>\n\n    <div className=\"loader\"><LoaderComponent showLoader={!providers.fetched}/></div>\n\n    <List className={classes.root}>\n      {providers.items.map(item => <ItemComponent key={item.title} getProvider={getProvider} item={item}/>)}\n    </List>\n    </div>\n  </Grid>\n}\n\nconst mapStateToProps = (state: AppState): IListMapStateToProps => ({\n  providers: state.providers\n});\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<AppState, unknown, any>): IListMapDispatchToProps => ({\n  getProvider: (list: IList) => dispatch(getProvider(list)),\n  initProviders: (lists: IList[]) => dispatch(initProviders(lists))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListComponent);\n","import {IList, IReducerType} from \"../common/types\";\n\nexport const GET_PROVIDER: string = 'GET_PROVIDER';\n\nexport function getProvider(payload: IList) {\n  return (dispatch: (arg: IReducerType) => void) => {\n    dispatch(({type: GET_PROVIDER, payload}));\n  }\n}\n","import {IList} from \"../common/types\";\nimport {ThunkAction} from \"redux-thunk\";\nimport {Dispatch} from \"redux\";\nimport {AppState} from \"../store\";\n\nexport const INIT_PROVIDERS: string = 'INIT_PROVIDERS';\n\nexport const initProviders = (payload: IList[]): ThunkAction<unknown, AppState, undefined, any> => {\n  return (dispatch: Dispatch<{ type: string, payload: IList[] }>) => {\n    dispatch(({type: INIT_PROVIDERS, payload}));\n  }\n};\n","import React from 'react';\nimport MaskedInput from 'react-text-mask';\n\ninterface TextMaskCustomProps {\n  inputRef: (ref: HTMLInputElement | null) => void;\n}\n\nexport default function PhoneNumberComponent(props: TextMaskCustomProps): JSX.Element {\n  const { inputRef, ...other } = props;\n\n  return (\n    <MaskedInput\n      {...other}\n      ref={(ref: any) => {inputRef(ref ? ref.inputElement : null)}}\n      mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n      guide={false}\n      placeholder=\"(***) *** - ****\"\n    />\n  );\n}\n","import React from 'react';\nimport NumberFormat from 'react-number-format';\n\ninterface IBalanceComponent {\n  inputRef: React.Ref<HTMLInputElement>,\n  onChange: (event: { target: { value: string } }) => void;\n}\n\nexport default function BalanceComponent(props: IBalanceComponent): JSX.Element {\n  const { inputRef, onChange, ...other } = props;\n\n  return <NumberFormat\n    {...other}\n    getInputRef={inputRef}\n    format=\"####\"\n    onValueChange={values => {\n      onChange({\n        target: {\n          value: values.value,\n        },\n      });\n    }}\n  />\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\n// local files\nimport LoaderComponent from './loader';\nimport {IButtonComponent} from \"../common/types\";\n\nexport default function ButtonComponent(props: IButtonComponent): JSX.Element {\n  return <Button\n    type={props.type}\n    onClick={props.onClick}\n    variant=\"contained\"\n    color={props.color || 'primary'}>{props.showLoader ?\n    <LoaderComponent color=\"inherit\" size={25} showLoader={true}/> : props.text}</Button>\n}\n","import {IList} from \"./provider.types\";\n\nexport enum ERefillHandle {\n  phone = 'phone',\n  amount = 'amount'\n}\n\nexport interface IRefillComponent {\n  showListEvent: (val: boolean) => void\n}\n\nexport interface IRefillMatState {\n  provider: IList;\n}\n\nexport interface IRefillState {\n  phone?: string | null;\n  amount?: number | null;\n  showLoader: boolean;\n}\n\nexport type IRefillProps = IRefillComponent & IRefillMatState;\n","import React, { useEffect } from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport {ISnack} from \"../common/types\";\n\nexport default function SnackComponent(props: ISnack): JSX.Element {\n  const [open, setOpen] = React.useState(props.show);\n  const onClose = () => {\n    setOpen(false);\n    props.hideSnack();\n  };\n\n  useEffect(() => {\n    setOpen(props.show);\n  }, [props.show]);\n\n  return <Snackbar open={open} anchorOrigin={{ vertical: 'top', horizontal: 'right' }}>\n    <MuiAlert\n      onClose={() => onClose()}\n      severity={props.type}\n      elevation={6}\n      variant=\"filled\">{props.message}</MuiAlert>\n  </Snackbar>\n\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\n// local files\nimport PhoneNumberComponent from './phone.number';\nimport BalanceComponent from './balance';\nimport TextComponent from './text';\nimport ImageComponent from './image';\nimport ButtonComponent from './button.component';\nimport SnackComponent from './snack';\nimport {ISnack} from \"../common/types\";\nimport {AppState} from \"../store\";\nimport {ERefillHandle, IRefillMatState, IRefillProps, IRefillState} from \"../common/types/refill.types\";\n\nconst initialSnackState: ISnack = {\n  show: false,\n  type: 'success',\n  message: '',\n  isError: false,\n}\n\nconst initialValueState: IRefillState = {\n  phone: null,\n  amount: null,\n  showLoader: false\n}\n\nfunction RefillComponent(props: IRefillProps): JSX.Element {\n  const {provider} = props;\n  const [snack, setSnackValues] = React.useState(initialSnackState);\n  const [values, setValues] = React.useState(initialValueState);\n\n  const handleChange = (name: string) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValues({\n      ...values,\n      [name]: event.target.value,\n    });\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    setValues({ showLoader: true });\n\n    setTimeout(() => {\n      const isError = !!(Math.round((Math.random() * (1 - 9))) % 2);\n      const type = isError ? 'error' : 'success';\n      const message = isError ? 'Oops some error' : 'Uploaded successfully!';\n\n      setSnackValues({show: true, isError, type, message});\n      setValues({showLoader: false, amount: null, phone: null});\n    }, 1000);\n  }\n\n  const hideSnack: () => void = () => {\n    setSnackValues({ show: false });\n\n    if (!snack.isError) {\n      props.showListEvent(true);\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit} className=\"refill\">\n      <SnackComponent\n        hideSnack={hideSnack}\n        show={snack.show}\n        type={snack.type} message={snack.message} />\n\n      <TextComponent align=\"center\" text=\"Refill balance form\" />\n\n      <ImageComponent src={provider.image} />\n\n      <TextComponent tag=\"h6\" align=\"center\" text={provider.title} />\n\n      <FormControl className=\"input\">\n        <InputLabel htmlFor=\"formatted-text-mask-input\">Phone number</InputLabel>\n        <Input\n          required\n          value={values.phone}\n          onChange={handleChange(ERefillHandle.phone)}\n          inputComponent={PhoneNumberComponent as any}\n        />\n      </FormControl>\n\n      <TextField\n        required\n        className=\"input\"\n        label=\"Amount\"\n        value={values.amount}\n        onChange={handleChange(ERefillHandle.amount)}\n        InputProps={{ inputComponent: BalanceComponent as any }}\n      />\n\n      <div className=\"button\">\n        <ButtonComponent showLoader={values.showLoader} type=\"submit\" text=\"Submit\" />\n        <ButtonComponent onClick={() => props.showListEvent(true)} color=\"inherit\" text=\"Cancel\" />\n      </div>\n\n    </form>\n  )\n}\n\nconst mapState = (state: AppState): IRefillMatState => ({\n  provider: state.provider\n});\n\nexport default connect(mapState)(RefillComponent);\n","import {GET_PROVIDER} from \"../actions/provider.action\";\nimport {IList, IReducerType} from \"../common/types\";\n\nconst initialState: IList = {} as IList;\n\nexport default function provider(state = initialState, action: IReducerType): IList {\n  switch (action.type) {\n    case GET_PROVIDER:\n      return {...state, ...action.payload as IList};\n\n    default:\n      return state;\n  }\n  \n}\n","import {INIT_PROVIDERS} from '../actions/providers.action';\nimport {IList, IProviders, IReducerType} from \"../common/types\";\n\nconst initialState: IProviders = {\n  items: [],\n  fetched: false,\n};\n\nexport default function providers(state = initialState, action: IReducerType): IProviders {\n  switch (action.type) {\n    case INIT_PROVIDERS:\n      return {...state, ...{items: action.payload as IList[], fetched: true}};\n\n    default:\n      return state;\n  }\n}\n","import {combineReducers} from 'redux';\n// local files\nimport provider from './provider';\nimport providers from './providers';\n\nexport const rootReducer = combineReducers({\n  provider,\n  providers,\n});\n","import {applyMiddleware, compose, createStore} from 'redux';\nimport thunk from 'redux-thunk';\nimport {rootReducer} from '../reducers/index';\n\nexport type AppState = ReturnType<typeof rootReducer>;\nconst composeEnhancers = (window && window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst middleware = applyMiddleware(thunk);\n\nexport const store = createStore(rootReducer, composeEnhancers(middleware));\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport Container from '@material-ui/core/Container';\nimport {Provider} from \"react-redux\";\n\n// local files\nimport './styles/style.css'\nimport ListComponent from './components/list';\nimport RefillComponent from \"./components/refill\";\nimport {store} from './store';\n\nfunction App() {\n  const [showList, setShowList] = React.useState(true);\n  const showListEvent = val => setShowList(val);\n\n  return <Container maxWidth=\"sm\">\n    {showList ? <ListComponent showListEvent={showListEvent} />\n    : <RefillComponent showListEvent={showListEvent} />}\n  </Container>;\n}\n\nrender(<Provider store={store}><App /></Provider>, document.getElementById(\"root\"));\n"],"sourceRoot":""}